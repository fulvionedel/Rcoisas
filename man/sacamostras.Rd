% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sacamostras.R
\name{sacamostras}
\alias{sacamostras}
\title{Toma múltiplas amostras aleatórias de um banco de dados.}
\usage{
sacamostras(data, size, prefix, suffixes, tipo = 2)
}
\arguments{
\item{data}{"Data frame" fonte das amostras.}

\item{size}{Tamanho das amostras (nº de registros).}

\item{prefix}{Texto para o início do nome dos "data frames" e bancos de dados.}

\item{suffixes}{Vetor com texto para o final do nome dos "data frames" e bancos de dados.}

\item{tipo}{Formatação do arquivo csv; `tipo = 1` invoca a função \code{\link{write.csv}}, com campos separados por vírgula (`,`) e decimais separados por ponto (`.`), enquanto `tipo = 2` (padrão) invoca a função \code{\link{write.csv2}}, criando arquivos com campos separados por ponto-e-vírgula (`;`) e decimais separados por vírgula (`,`).}
}
\description{
Toma múltiplas amostras aleatórias sem reposição de um banco de dados. Cada amostra é salva em um objeto da classe `data.frame` e exportada para um arquivo .csv, enquanto o conjunto dos objetos é salvo num arquivo de dados do R (.RData). Os arquivos são salvos no diretório de trabalho da sessão ativa. O nº de amostras a extrair é dado pelo comprimento de uma lista indicada no argumento `suffixes`
e cria novos "data frames" em um número definido de amostras aleatórias de tamanho n, criando com cada amostra um objeto da classe `data.frame`, que será salvo em um arquivo .csv e com os demais data frames, em um arquivo .RData. Criada com ajuda do chatGPT em 06/06/2023.
}
\examples{
# Perceba que a função não é enderaçada a nenhum objeto (tipo `x <- sacamostras(...)`), 
# uma vez que ela já cria os bancos de dados como objetos no espaço de trabalho.
semente = 1:7
# Amostra de 100 registros:
sacamostras(data = RDRS2019, size = 100, prefix = "amostra_", suffixes = semente) 
# Amostra de 10\\% dos registros:
sacamostras(data = RDRS2019, size = .01, prefix = "amostra_", suffixes = semente) 
unlink("amostra*") # apaga os arquivos criados

}
